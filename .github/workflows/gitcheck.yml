name: Release app
on:
  push:
    branches:
      - master

jobs:
  build:
    name: test stuff
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo
        uses: actions/checkout@v3

      - name: Get previous release
        id: last_release
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: ${{ github.repository }}
          excludes: prerelease, draft
      - name: "Print result"
        run: |
          echo "id: ${{ steps.last_release.outputs.release }}"
          echo "name: ${{ steps.last_release.outputs.id }}"
      - name: Prepare build
        run: |
          set -e

          commit_count=$(git rev-list --count HEAD)
          echo "COMMIT_COUNT=$commit_count" >> $GITHUB_ENV
          current_sha=$(git rev-parse --short HEAD)
          echo "CURRENT_SHA=$current_sha"
          echo "CURRENT_SHA=$current_sha" >> $GITHUB_ENV
          prev_commit_count=$(echo "${{ steps.last_release.outputs.tag_name }}" | sed -e "s/^r//")
          commit_count_diff=$(expr $commit_count - $prev_commit_count)
          prev_release_sha=$(git rev-parse --short HEAD~$commit_count_diff)
           echo "PREV_RELEASE_SHA=$prev_release_sha"
          echo "PREV_RELEASE_SHA=$prev_release_sha" >> $GITHUB_ENV
          echo "COMMIT_LOGS<<{delimiter}
          #$(curl -H "Accept: application/vnd.github.v3+json" \
          #  "https://api.github.com/repos/tachiyomiorg/tachiyomi/compare/$prev_release_sha...$current_sha" \
          #  | jq '[.commits[]|{message:(.commit.message | split("\n")), username:.author.login}]' \
          #  | jq -r '.[]|"- \(.message | first) (@\(.username))"')
          #{delimiter}" >> $GITHUB_ENV
